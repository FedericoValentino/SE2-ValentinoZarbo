W1:	An educator wants to create a tournament to evaluate students performance

W2:	Students fork the created repository for a battle on Github

W3:	An educator creates the battle assignment

W4:	Students write source code for the code kata battle

W5:	Students create commits on Github

W6:	Students decide to join a battle

W7:	Students create groups for battles

W8:	Students setup an automated workflow for the forked repository on Github

W9: 	Students decide to join a tournament

W10: 	Educator decides to close tournament

---------------------------------------------------------------------------------------------------------------
WORLD CONTROLLED
SP1:	An educator fills out a tournament creation form

SP2:	An educator uploads the details of a code kata battle(the assignment, the rules, the tests)

SP3:	A group(maybe singleton) joins a battle respecting the rules regarding the min and max group size

SP4:	An educator logs into the platform

SP5: 	A student logs into the platform

SP6:	The system requires additional manual evalution by an educator for a battle(if required by the rules) 
	#godown

SP7:	The educator inserts an additional manual score for a battle

SP8:	A student invites other students to a group to partecipate to a battle

SP9:	Github on commit notifies the code kata platform

SP10:	An educator registers an account on the platform

SP11:	A student registers an account on the platform

SP12:	A student subscribes to a tournament

SP13: 	Students and educator look at the rank for a battle they are involved in

SP14:	Students and educator look at the rank for a tournament

sp15:	Educator closes tournament

sp16: 	User looks at list of available tournament

SP17:	A student accepts and invitet o a group to partecipate to a battle


---------------------------------------------------------------------------------------------------------------
MACHINE CONTROLLED

SP1:	The platform notifies all students when a tournament is created

SP2:	The platfotm notifies all students subscribed to a tournament of new upcoming battles

SP3:	The platform notifies the final score to all students subscribed to a battle, when that battle ends

SP4:	When the platform is notifies about a commit, it pulls from the committed repository to start the 
	mandatory analysis

SP5:	The platform creates the github repository for a battle

SP6:	The platform sends links to the created repository for the battle to all students who are subscribed 
	to the battle

---------------------------------------------------------------------------------------------------------------

M1:	The platform does the mandatory evaluation at each commit from a student for a battle

M2:	The platform updates scores and leaderboard of a group

M3:	The platform updates students personal scores at the end of a battle

M4: 	Close battle on submission deadline 



---------------------------------------------------------------------------------------------------------------

SCENARIOS:

s1:	User sign in[wsp10, wsp11]
s2:	User logs in[wsp4,wsp5]
s3:	Educator creates tournament [w1, wsp1, msp1]
s4: 	Educator creates battle [w3,wsp2, msp2]
s5:	Student subscribe tournament [w9,wsp12, wsp16]
s6: 	Team of students join battle [w5,w7,wsp8,w8, msp5, msp6]
s7:	Application scores commit from student[wsp9, msp4,m1, m2]
s8:	Users looks at battle rank(only involved) [wsp13]
s9:	Battle subssion deadline expires [m3, m4,msp3]
s10: 	Educator close torunament [w10,wsp15, msp14]	
s11:	Users look at tournament rank[WSP14]



---------------

G1: 	An educator can create a tournament with a set of rules

G2:	An educator can create battles inside of a tournament, for which he is an organizer or co-organizer

G3:	Students can partecipate and compete in tournaments created by an educator, alone or in groups

G4:	Students are scored based on their performance in battles

G5:	The platform allows students and educators to compare results of the performance of students

---------------------------------------------------------------------------------------------------------------

R1:	If an educator is signed in he can create tournaments -> G1

R2:	If a user is an educator and he/she created a tournament, he/she can invite other educator to 
	be co-creators -> G2

R3:	If a user is creator or co-creator of a tournament he can create new battles inside of 
	that same tournament -> G2

R4:	When creating a battle the educator can upload all the info required -> G2

R5:	A student can subscribe to a battle -> G3

R6:	A student can create a group by inviting other students for a battle -> G3

R7:	A student can subscribe to a tournament -> G3

R8: 	When creating a battle an educator can decide to include a manual evaluation stage -> G2

R9:	Students are allowed to login -> General Requirement

R10:	Educators are allowed to login -> General Requirement

R11:	If manual evaluation is required the platform allows an educator to go through (if manual evalutaion is req. at the end of a battle deadline ....)
	sources and add a score -> G4

R12:	Educators can look at student ranks from previous and current tournaments -> G5

R13:	Students can look at students rank from the current tournament -> G5 

R14:	The platform saves in the student profile the ranking from partecipated tournaments -> G5 NO

R15:	Students have a personal profile -> G5 NO

R16:	All users can see a student's profile -> G5  NO
 
R17:	The platform can analyze students source and add score -> G4 (when new solution are signaled, the platform pulls them froom github and analyze ... )

R18:	When an educator is part of a tournament he can create a battle -> G2 GIA PRESENTE

AGGIUNTIVE: sign in; 

-----------------------------------------------------------------------------------------------------------------

A1:	The students can correctly setup the Github actions workflow(we dont know how to do it)

A2:	An educator will complete the manual evaluation

A3:	Github will always notifies the CKB platform after every student commit

A4: 	Students are always able to create a group to join a battle

A5:	Educators will only close a tournament when no battle is still ongoing


#TODO Educator uses the CKB platform to go through all sources for manual evaluation
#TODO Students can look at tournaments rank he is or was subscribed to
#TODO Educators can look at tournaments ranks for students that are or were subscribed to
#TODO 
